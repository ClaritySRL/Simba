addClass('TMenu', 'TLCLComponent');

addClass('TMenuItem', 'TLCLComponent');
addClassVar('TMenuItem', 'FCompStyle', 'LongInt', @_LapeMenuItem_FCompStyle_Read, @_LapeMenuItem_FCompStyle_Write);
addGlobalFunc('function TMenuItem.Find(const ACaption: string): TMenuItem; constref', @_LapeMenuItem_Find);
addGlobalFunc('function TMenuItem.GetParentMenu: TMenu; constref', @_LapeMenuItem_GetParentMenu);
addGlobalFunc('function TMenuItem.GetIsRightToLeft: Boolean; constref', @_LapeMenuItem_GetIsRightToLeft);
addGlobalFunc('function TMenuItem.HandleAllocated: Boolean; constref', @_LapeMenuItem_HandleAllocated);
addGlobalFunc('function TMenuItem.HasIcon: boolean; constref', @_LapeMenuItem_HasIcon);
addGlobalFunc('procedure TMenuItem.InitiateAction; constref', @_LapeMenuItem_InitiateAction);
addGlobalFunc('procedure TMenuItem.IntfDoSelect; constref', @_LapeMenuItem_IntfDoSelect);
addGlobalFunc('function TMenuItem.IndexOf(Item: TMenuItem): Integer; constref', @_LapeMenuItem_IndexOf);
addGlobalFunc('function TMenuItem.IndexOfCaption(const ACaption: string): Integer; constref', @_LapeMenuItem_IndexOfCaption);
addGlobalFunc('function TMenuItem.VisibleIndexOf(Item: TMenuItem): Integer; constref', @_LapeMenuItem_VisibleIndexOf);
addGlobalFunc('procedure TMenuItem.Add(Item: TMenuItem); constref', @_LapeMenuItem_Add);
addGlobalFunc('procedure TMenuItem.AddEx(Items: array of TMenuItem); constref', @_LapeMenuItem_AddEx);
addGlobalFunc('procedure TMenuItem.AddSeparator; constref', @_LapeMenuItem_AddSeparator);
addGlobalFunc('procedure TMenuItem.Click; constref', @_LapeMenuItem_Click);
addGlobalFunc('procedure TMenuItem.Delete(Index: Integer); constref', @_LapeMenuItem_Delete);
addGlobalFunc('procedure TMenuItem.HandleNeeded; constref', @_LapeMenuItem_HandleNeeded);
addGlobalFunc('procedure TMenuItem.Insert(Index: Integer; Item: TMenuItem); constref', @_LapeMenuItem_Insert);
addGlobalFunc('procedure TMenuItem.RecreateHandle; constref', @_LapeMenuItem_RecreateHandle);
addGlobalFunc('procedure TMenuItem.Remove(Item: TMenuItem); constref', @_LapeMenuItem_Remove);
addGlobalFunc('function TMenuItem.IsCheckItem: boolean; constref', @_LapeMenuItem_IsCheckItem);
addGlobalFunc('function TMenuItem.IsLine: Boolean; constref', @_LapeMenuItem_IsLine);
addGlobalFunc('function TMenuItem.IsInMenuBar: boolean; constref', @_LapeMenuItem_IsInMenuBar);
addGlobalFunc('procedure TMenuItem.Clear; constref', @_LapeMenuItem_Clear);
addGlobalFunc('function TMenuItem.HasBitmap: boolean; constref', @_LapeMenuItem_HasBitmap);
addGlobalFunc('function TMenuItem.AddMenu(s: string): TMenuItem; constref', @_LapeMenuItem_AddMenu);
addClassVar('TMenuItem', 'Count', 'Integer', @_LapeMenuItem_Count_Read, nil);
addClassVar('TMenuItem', 'Items', 'TMenuItem', @_LapeMenuItem_Items_Read, nil);
addClassVar('TMenuItem', 'Hint', 'String', @_LapeMenuItem_Hint_Read, @_LapeMenuItem_Hint_Write);
addClassVar('TMenuItem', 'Checked', 'Boolean', @_LapeMenuItem_Checked_Read, @_LapeMenuItem_Checked_Write);
addClassVar('TMenuItem', 'MenuIndex', 'Integer', @_LapeMenuItem_MenuIndex_Read, @_LapeMenuItem_MenuIndex_Write);
addClassVar('TMenuItem', 'Menu', 'TMenu', @_LapeMenuItem_Menu_Read, nil);
addClassVar('TMenuItem', 'Parent', 'TMenuItem', @_LapeMenuItem_Parent_Read, nil);
addClassVar('TMenuItem', 'Command', 'Word', @_LapeMenuItem_Command_Read, nil);
addClassVar('TMenuItem', 'AutoCheck', 'boolean', @_LapeMenuItem_AutoCheck_Read, @_LapeMenuItem_AutoCheck_Write);
addClassVar('TMenuItem', 'Default', 'Boolean', @_LapeMenuItem_Default_Read, @_LapeMenuItem_Default_Write);
addClassVar('TMenuItem', 'Bitmap', 'TBitmap', @_LapeMenuItem_Bitmap_Read, @_LapeMenuItem_Bitmap_Write);
addClassVar('TMenuItem', 'GroupIndex', 'Byte', @_LapeMenuItem_GroupIndex_Read, @_LapeMenuItem_GroupIndex_Write);
addClassVar('TMenuItem', 'RadioItem', 'Boolean', @_LapeMenuItem_RadioItem_Read, @_LapeMenuItem_RadioItem_Write);
addClassVar('TMenuItem', 'RightJustify', 'boolean', @_LapeMenuItem_RightJustify_Read, @_LapeMenuItem_RightJustify_Write);
addClassVar('TMenuItem', 'OnClick', 'TNotifyEvent', @_LapeMenuItem_OnClick_Read, @_LapeMenuItem_OnClick_Write);
addClassVar('TMenuItem', 'Caption', 'String', @_LapeMenuItem_Caption_Read, @_LapeMenuItem_Caption_Write);
addGlobalFunc('procedure TMenuItem.Init(AOwner: TComponent); override', @_LapeMenuItem_Init);
// addGlobalFunc('procedure TMenuItem.Free; constref', @_LapeMenuItem_Free);

addClassVar('TMenu', 'FCompStyle', 'LongInt', @_LapeMenu_FCompStyle_Read, @_LapeMenu_FCompStyle_Write);
addGlobalFunc('procedure TMenu.DestroyHandle; constref', @_LapeMenu_DestroyHandle);
addGlobalFunc('function TMenu.HandleAllocated: Boolean; constref', @_LapeMenu_HandleAllocated);
addGlobalFunc('function TMenu.IsRightToLeft: Boolean; constref', @_LapeMenu_IsRightToLeft);
addGlobalFunc('function TMenu.UseRightToLeftAlignment: Boolean; constref', @_LapeMenu_UseRightToLeftAlignment);
addGlobalFunc('function TMenu.UseRightToLeftReading: Boolean; constref', @_LapeMenu_UseRightToLeftReading);
addGlobalFunc('procedure TMenu.HandleNeeded; constref', @_LapeMenu_HandleNeeded);
addGlobalFunc('function TMenu.DispatchCommand(ACommand: Word): Boolean; constref', @_LapeMenu_DispatchCommand);
addGlobalFunc('function TMenu.AddMenu(name: string): TMenuItem; constref', @_LapeMenu_AddMenu);
addClassVar('TMenu', 'Parent', 'TComponent', @_LapeMenu_Parent_Read, @_LapeMenu_Parent_Write);
addClassVar('TMenu', 'ShortcutHandled', 'boolean', @_LapeMenu_ShortcutHandled_Read, @_LapeMenu_ShortcutHandled_Write);
addClassVar('TMenu', 'Items', 'TMenuItem', @_LapeMenu_Items_Read, nil);
addGlobalFunc('procedure TMenu.Init(AOwner: TComponent); override', @_LapeMenu_Init);
//addGlobalFunc('procedure TMenu.Free; constref', @_LapeMenu_Free);

addClass('TMainMenu', 'TMenu');
addGlobalFunc('procedure TMainMenu.Init(AOwner: TComponent); override', @_LapeMainMenu_Init);
//addGlobalFunc('procedure TMainMenu.Free; constref', @_LapeMainMenu_Free);

