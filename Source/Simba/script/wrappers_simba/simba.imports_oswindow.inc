FSection := 'OSWindow';
addGlobalType('type PtrUInt', 'TOSWindow');
addGlobalType('array of TOSWindow', 'TOSWindowArray');
addGlobalFunc('function TOSWindow.Activate: Boolean; constref', @_LapeOSWindow_Activate);
addGlobalFunc('function TOSWindow.IsVaild: Boolean; constref', @_LapeOSWindow_IsVaild);
addGlobalFunc('function TOSWindow.IsActive: Boolean; constref; overload', @_LapeOSWindow_IsActive);
addGlobalFunc('function TOSWindow.IsActive(Time: Int32): Boolean; constref; overload', @_LapeOSWindow_IsActiveEx);
addGlobalFunc('function TOSWindow.IsVisible: Boolean; constref', @_LapeOSWindow_IsVisible);
addGlobalFunc('function TOSWindow.GetPID: UInt32; constref', @_LapeOSWindow_GetPID);
addGlobalFunc('function TOSWindow.GetRootWindow: TOSWindow; constref; ', @_LapeOSWindow_GetRootWindow);
addGlobalFunc('function TOSWindow.GetClassName: WideString; constref', @_LapeOSWindow_GetClassName);
addGlobalFunc('function TOSWindow.GetTitle: WideString; constref', @_LapeOSWindow_GetTitle);
addGlobalFunc('function TOSWindow.GetBounds: TBox; constref', @_LapeOSWindow_GetBounds);
addGlobalFunc('function TOSWindow.GetChildren(Recursive: Boolean = True): TOSWindowArray; constref', @_LapeOSWindow_GetChildren);
addGlobalFunc('procedure TOSWindow.SetBounds(Bounds: TBox); constref', @_LapeOSWindow_SetBounds);
addGlobalFunc('procedure TOSWindow.Kill; constref', @_LapeOSWindow_Kill);
addGlobalFunc('function TOSWindowArray.GetByTitle(Title: String; out Window: TOSWindow): Boolean; constref; overload', @_LapeOSWindowArray_GetByTitle);
addGlobalFunc('function TOSWindowArray.GetByTitle(Title: String): TOSWindowArray; constref; overload', @_LapeOSWindowArray_GetByTitleEx);
addGlobalFunc('function TOSWindowArray.GetByClass(ClassName: String; out Window: TOSWindow): Boolean; constref; overload', @_LapeOSWindowArray_GetByClass);
addGlobalFunc('function TOSWindowArray.GetByClass(ClassName: String): TOSWindowArray; constref; overload', @_LapeOSWindowArray_GetByClassEx);
addGlobalFunc('function TOSWindowArray.GetByTitleAndClass(Title, ClassName: String; out Window: TOSWindow): Boolean; overload', @_LapeOSWindowArray_GetByTitleAndClass);
addGlobalFunc('function TOSWindowArray.GetByTitleAndClass(Title, ClassName: String): TOSWindowArray; overload', @_LapeOSWindowArray_GetByTitleAndClassEx);
addGlobalFunc('function TOSWindowArray.ToString: String; constref', @_LapeOSWindowArray_ToString);
addGlobalFunc('function GetTopWindows: TOSWindowArray', @_LapeGetTopWindows);
addGlobalFunc('function GetVisibleWindows: TOSWindowArray', @_LapeGetVisibleWindows);
addGlobalFunc('function GetWindows: TOSWindowArray', @_LapeGetWindows);
addGlobalFunc('function GetActiveWindow: TOSWindow', @_LapeGetActiveWindow);
addGlobalFunc('function GetDesktopWindow: TOSWindow', @_LapeGetDesktopWindow);
addGlobalFunc('function GetWindowAtCursor: TOSWindow', @_LapeGetWindowAtCursor);
addGlobalFunc('function FindWindow(Title: String): TOSWindowArray; overload', @_LapeFindWindow);
addGlobalFunc('function FindWindow(Title: String; out Window: TOSWindow): Boolean; overload', @_LapeFindWindowEx);
addGlobalFunc('function FindChildWindow(Title: String; ClassName: String): TOSWindowArray; overload', @_LapeFindChildWindow);
addGlobalFunc('function FindChildWindow(Title: String; ClassName: String; out Child: TOSWindow): Boolean; overload', @_LapeFindChildWindowEx);

