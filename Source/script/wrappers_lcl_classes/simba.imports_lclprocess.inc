pushSection('Classes');

addGlobalType('(oRunSuspended,poWaitOnExit,poUsePipes,poStderrToOutPut,poNoConsole,poNewConsole,poDefaultErrorMode,poNewProcessGroup,poDebugProcess,poDebugOnlyThisProcess,poDetached,poPassInput,poRunIdle)', 'TProcessOption');
addGlobalType('(swoNone,swoHIDE,swoMaximize,swoMinimize,swoRestore,swoShow, swoShowDefault,swoShowMaximized,swoShowMinimized, swoshowMinNOActive,swoShowNA,swoShowNoActivate,swoShowNormal)', 'TShowWindowOptions');
addGlobalType('(suoUseShowWindow,suoUseSize,suoUsePosition, suoUseCountChars,suoUseFillAttribute)', 'TStartupOption');
addGlobalType('(ppHigh,ppIdle,ppNormal,ppRealTime)', 'TProcessPriority');
addGlobalType('set of TProcessOption', 'TProcessOptions');
addGlobalType('set of TStartupOption', 'TStartupOptions');

addClass('TOutputPipeStream', 'THandleStream');
// addGlobalFunc('function TOutputPipeStream.Seek(const Offset: int64; Origin: TSeekOrigin): int64; constref', @_LapeOutputPipeStream_Seek);
// addGlobalFunc('function TOutputPipeStream.Read(Var Buffer; Count : Integer): Integer; constref', @_LapeOutputPipeStream_Read);
addGlobalFunc('procedure TOutputPipeStream.Init(AHandle: THandle); override', @_LapeOutputPipeStream_Init);
// addGlobalFunc('procedure TOutputPipeStream.Free; constref', @_LapeOutputPipeStream_Free);

addClass('TInputPipeStream', 'THandleStream');
//addGlobalFunc('function TInputPipeStream.Write(constref Buffer; Count : Integer): Integer; constref', @_LapeInputPipeStream_Write);
//addGlobalFunc('function TInputPipeStream.Seek(const Offset: int64; Origin: TSeekOrigin): int64; constref', @_LapeInputPipeStream_Seek);
//addGlobalFunc('function TInputPipeStream.Read(var Buffer; Count : Integer): Integer; constref', @_LapeInputPipeStream_Read);
addClassVar('TInputPipeStream', 'NumBytesAvailable', 'UInt32', @_LapeInputPipeStream_NumBytesAvailable_Read, nil);
addGlobalFunc('procedure TInputPipeStream.Init(AHandle: THandle); override', @_LapeInputPipeStream_Init);
//addGlobalFunc('procedure TInputPipeStream.Free; constref', @_LapeInputPipeStream_Free);

addClass('TProcess', 'TComponent');
addGlobalFunc('procedure TProcess.Execute; constref', @_LapeProcess_Execute);
addGlobalFunc('procedure TProcess.CloseInput; constref', @_LapeProcess_CloseInput);
addGlobalFunc('procedure TProcess.CloseOutput; constref', @_LapeProcess_CloseOutput);
addGlobalFunc('procedure TProcess.CloseStderr; constref', @_LapeProcess_CloseStderr);
addGlobalFunc('function TProcess.Resume: Integer; constref', @_LapeProcess_Resume);
addGlobalFunc('function TProcess.Suspend: Integer; constref', @_LapeProcess_Suspend);
addGlobalFunc('function TProcess.Terminate(AExitCode : Integer): Boolean; constref', @_LapeProcess_Terminate);
addGlobalFunc('function TProcess.WaitOnExit: Boolean; constref', @_LapeProcess_WaitOnExit);
addClassVar('TProcess', 'WindowRect', 'TRect', @_LapeProcess_WindowRect_Read, @_LapeProcess_WindowRect_Write);
addClassVar('TProcess', 'Handle', 'THandle', @_LapeProcess_Handle_Read, nil);
addClassVar('TProcess', 'ProcessHandle', 'THandle', @_LapeProcess_ProcessHandle_Read, nil);
addClassVar('TProcess', 'ThreadHandle', 'THandle', @_LapeProcess_ThreadHandle_Read, nil);
addClassVar('TProcess', 'ProcessID', 'Integer', @_LapeProcess_ProcessID_Read, nil);
addClassVar('TProcess', 'ThreadID', 'Integer', @_LapeProcess_ThreadID_Read, nil);
addClassVar('TProcess', 'Input', 'TOutputPipeStream', @_LapeProcess_Input_Read, nil);
addClassVar('TProcess', 'Output', 'TInputPipeStream', @_LapeProcess_Output_Read, nil);
addClassVar('TProcess', 'Stderr', 'TinputPipeStream', @_LapeProcess_Stderr_Read, nil);
addClassVar('TProcess', 'ExitStatus', 'Integer', @_LapeProcess_ExitStatus_Read, nil);
addClassVar('TProcess', 'ExitCode', 'Integer', @_LapeProcess_ExitCode_Read, nil);
addClassVar('TProcess', 'InheritHandles', 'Boolean', @_LapeProcess_InheritHandles_Read, @_LapeProcess_InheritHandles_Write);
addClassVar('TProcess', 'PipeBufferSize', 'UInt32', @_LapeProcess_PipeBufferSize_Read, @_LapeProcess_PipeBufferSize_Write);
addClassVar('TProcess', 'Active', 'Boolean', @_LapeProcess_Active_Read, @_LapeProcess_Active_Write);
addClassVar('TProcess', 'CommandLine', 'String', @_LapeProcess_CommandLine_Read, @_LapeProcess_CommandLine_Write);
addClassVar('TProcess', 'Executable', 'String', @_LapeProcess_Executable_Read, @_LapeProcess_Executable_Write);
addClassVar('TProcess', 'Parameters', 'TStrings', @_LapeProcess_Parameters_Read, @_LapeProcess_Parameters_Write);
addClassVar('TProcess', 'ConsoleTitle', 'String', @_LapeProcess_ConsoleTitle_Read, @_LapeProcess_ConsoleTitle_Write);
addClassVar('TProcess', 'CurrentDirectory', 'String', @_LapeProcess_CurrentDirectory_Read, @_LapeProcess_CurrentDirectory_Write);
addClassVar('TProcess', 'Desktop', 'String', @_LapeProcess_Desktop_Read, @_LapeProcess_Desktop_Write);
addClassVar('TProcess', 'Environment', 'TStrings', @_LapeProcess_Environment_Read, @_LapeProcess_Environment_Write);
addClassVar('TProcess', 'Options', 'TProcessOptions', @_LapeProcess_Options_Read, @_LapeProcess_Options_Write);
addClassVar('TProcess', 'Priority', 'TProcessPriority', @_LapeProcess_Priority_Read, @_LapeProcess_Priority_Write);
addClassVar('TProcess', 'StartupOptions', 'TStartupOptions', @_LapeProcess_StartupOptions_Read, @_LapeProcess_StartupOptions_Write);
addClassVar('TProcess', 'Running', 'Boolean', @_LapeProcess_Running_Read, nil);
addClassVar('TProcess', 'ShowWindow', 'TShowWindowOptions', @_LapeProcess_ShowWindow_Read, @_LapeProcess_ShowWindow_Write);
addClassVar('TProcess', 'WindowColumns', 'UInt32', @_LapeProcess_WindowColumns_Read, @_LapeProcess_WindowColumns_Write);
addClassVar('TProcess', 'WindowHeight', 'UInt32', @_LapeProcess_WindowHeight_Read, @_LapeProcess_WindowHeight_Write);
addClassVar('TProcess', 'WindowLeft', 'UInt32', @_LapeProcess_WindowLeft_Read, @_LapeProcess_WindowLeft_Write);
addClassVar('TProcess', 'WindowRows', 'UInt32', @_LapeProcess_WindowRows_Read, @_LapeProcess_WindowRows_Write);
addClassVar('TProcess', 'WindowTop', 'UInt32', @_LapeProcess_WindowTop_Read, @_LapeProcess_WindowTop_Write);
addClassVar('TProcess', 'WindowWidth', 'UInt32', @_LapeProcess_WindowWidth_Read, @_LapeProcess_WindowWidth_Write);
addClassVar('TProcess', 'FillAttribute', 'UInt32', @_LapeProcess_FillAttribute_Read, @_LapeProcess_FillAttribute_Write);
addClassVar('TProcess', 'XTermProgram', 'String', @_LapeProcess_XTermProgram_Read, @_LapeProcess_XTermProgram_Write);
addGlobalFunc('procedure TProcess.Init(AOwner : TComponent); override', @_LapeProcess_Init);
//addGlobalFunc('procedure TProcess.Free; constref', @_LapeProcess_Free);

popSection();
