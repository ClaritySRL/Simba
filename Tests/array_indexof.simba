{$assertions on}

procedure TestIntegerArray;
var
  Arr: TIntegerArray;
begin
  Assert(Arr.IndexOf(0)=-1);
  Arr := [0];
  Assert(Arr.IndexOf(0)=0);
  Arr := [1,0];
  Assert(Arr.IndexOf(0)=1);
  Arr := [3,-1,0,1,0,-123];
  Assert(Arr.IndexOf(1)=3);

  Arr := [3,-1,0,1,0,-123];
  Assert(ToString(Arr.IndicesOf(0)) = '[2, 4]');
end;

procedure TestSingleArray;
var
  Arr: TSingleArray;
begin
  Assert(Arr.IndexOf(0)=-1);
  Arr := [0];
  Assert(Arr.IndexOf(0)=0);
  Arr := [1,0];
  Assert(Arr.IndexOf(0)=1);
  Arr := [3,-1,0,1.2,0,-123];
  Assert(Arr.IndexOf(1.2)=3);

  Arr := [3,-1,0.5,1,0.5,-123];
  Assert(ToString(Arr.IndicesOf(0.5)) = '[2, 4]');
end;

procedure TestPointArray;
var
  Arr: TPointArray;
begin
  Assert(Arr.IndexOf([0,0])=-1);
  Arr := [[0,0]];
  Assert(Arr.IndexOf([0,0])=0);
  Arr := [[0,1],[0,0]];
  Assert(Arr.IndexOf([0,0])=1);
  Arr := [[-1,-1],[0,0],[123,123],[123,123]];
  Assert(Arr.IndexOf([123,123])=2);

  Arr := [[1,2],[3,4],[5,6],[1,2]];
  Assert(ToString(Arr.IndicesOf([1,2])) = '[0, 3]');
end;

begin
  TestIntegerArray();
  TestSingleArray();
  TestPointArray();
end;
